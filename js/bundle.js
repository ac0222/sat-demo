(()=>{"use strict";const t=1e-8,e="polygon",s="circle",i="cartesian",l="polar";class a{constructor(t,e,s){s==l?(this.r=t,this.theta=e,[this.x1,this.x2]=this.toCartesian(),this.theta=this.computeTheta()):(this.x1=t,this.x2=e,[this.r,this.theta]=this.toPolar())}toPolar(){return[this.magnitude(),this.computeTheta()]}toCartesian(){return[this.r*Math.cos(this.theta),this.r*Math.sin(this.theta)]}isZero(){return Math.abs(this.x1)<t&&Math.abs(this.x2)<t}reflectAcross(t){let e=t.getUnitVector(),s=2*this.dotProduct(e);return this.subtract(e.scalarMultiply(s))}equals(t){return this.subtract(t).isZero()}computeTheta(){let t=null,e=null;return 0==this.x1||0==this.x2?e=0==this.x1&&0!=this.x2?this.x2>0?Math.PI/2:-Math.PI/2:0!=this.x1&&0==this.x2?this.x1>0?0:Math.PI:0:(t=Math.atan(Math.abs(this.x2)/Math.abs(this.x1)),this.x1>0&&this.x2>0?e=t:this.x1<0&&this.x2>0?e=Math.PI-t:this.x1<0&&this.x2<0?e=-Math.PI+t:this.x1>0&&this.x2<0&&(e=-t)),e}add(t){let e=this.x1+t.x1,s=this.x2+t.x2;return new a(e,s,i)}subtract(t){let e=this.x1-t.x1,s=this.x2-t.x2;return new a(e,s,i)}extend(t){return new a(this.r+Math.abs(t),this.theta,l)}withdraw(t){return this.add(new a(t,this.theta,l).rotateVector(Math.PI))}scalarMultiply(t){return new a(this.x1*t,this.x2*t,i)}dotProduct(t){return this.x1*t.x1+this.x2*t.x2}magnitude(){return Math.sqrt(this.x1*this.x1+this.x2*this.x2)}rotateVector(t){return new a(this.r,this.theta+t,l)}getUnitVector(){let t=this.magnitude();return new a(this.x1/t,this.x2/t,i)}vectorProjection(t){var e=this.scalarProjection(t);return t.getUnitVector().scalarMultiply(e)}scalarProjection(t){return this.dotProduct(t.getUnitVector())}toPoint(){return new h(this.x1,this.x2)}}const r=a,h=class{constructor(t,e){this.x=t,this.y=e}getDistance(t){let e=this.x-t.x,s=this.y-t.y;return Math.sqrt(e*e+s*s)}toVector(){return new r(this.x,this.y,i)}equals(e){return Math.abs(this.x-e.x)<t&&Math.abs(this.y-e.y)<t}},n=class{constructor(t,e){this.lo=t,this.hi=e,this.hi<this.lo&&console.log("interval error!")}getOverlapInfo(t){let e={};return this.lo<t.lo&&this.hi>t.hi?(e.otype="container",e.osize=t.hi-t.lo):t.lo<this.lo&&t.hi>this.hi?(e.otype="contained",e.osize=this.hi-this.lo):this.hi>t.lo&&this.hi<t.hi?(e.otype="right",e.osize=this.hi-t.lo):t.lo<this.lo&&t.hi>this.lo?(e.otype="left",e.osize=t.hi-this.lo):e=null,e}},o=class{constructor(t,e,s){this.collider1=t,this.collider2=e,this.mtv=s}resolve(){this.collider1.reactToCollision(this.mtv,this.collider2),this.collider2.reactToCollision(this.mtv.scalarMultiply(-1),this.collider1)}};class c{constructor(t,e,s,i,l,a,r){this.centre=t,this.rotation=e,this.c1=s,this.c2=i,this.activeColour=this.c1,this.shapeType=l,this.tvelocity=a,this.rspeed=r,this.hitCounter=0,this.destroyFlag=!1,this.destructable=!0}equals(e){return!(!this.centre.equals(e.centre)||Math.abs(this.rotation-e.rotation)>t||this.c1!=e.c1||this.c2!=e.c2||this.shapeType!=e.shapeType||!this.tvelocity.equals(e.tvelocity)||Math.abs(this.rspeed-e.rspeed)>t)}setIndestructable(){this.destructable=!1}enterCollisionState(){this.activeColour=this.c2}exitCollisionState(){this.activeColour=this.c1}isActive(){return 0==this.tvelocity.isZero()||0!=this.rspeed}move(t){this.centre.x+=this.tvelocity.x1*(t/1e3),this.centre.y+=this.tvelocity.x2*(t/1e3),this.rotation+=this.rspeed*(t/1e3)}update(t){this.isActive()&&this.move(t)}static getEdgeVectors(t){let e=[],s=0;for(;s<t.length-1;)e[s]=t[s+1].subtract(t[s]),s++;return e[s]=t[0].subtract(t[s]),e}static getEdgeOrthogonals(t){let e=c.getEdgeVectors(t),s=[];for(let t=0;t<e.length;t++)s[t]=e[t].rotateVector(-Math.PI/2);return s}static renderPolygon(t,e,s){e.beginPath(),e.moveTo(t[0].x1,t[0].x2);for(let s=1;s<t.length;s++)e.lineTo(t[s].x1,t[s].x2);e.lineTo(t[0].x1,t[0].x2),e.fillStyle=s,e.fill(),e.closePath()}static renderCircle(t,e,s,i){s.beginPath(),s.arc(e.x,e.y,t,0,2*Math.PI),s.fillStyle=i,s.fill(),s.closePath()}static projectShapeFromPoint(t,l,a){let h=[];if(t.shapeType==s){let e=new r(t.centre.x,t.centre.y,i).subtract(l);h.push(e.scalarProjection(a)-t.radius),h.push(e.scalarProjection(a)+t.radius)}else if(t.shapeType==e){let e=[],s=t.getVertices();for(let t=0;t<s.length;t++)e[t]=s[t].subtract(l);for(let t=0;t<e.length;t++)h.push(e[t].scalarProjection(a))}else console.log("unrecognized shape type"),h=null;return h}static ppCollisionDetection(t,e){for(var s=t.centre.toVector(),i=e.centre.toVector(),l=s.subtract(i).magnitude(),a=t.getVertices(),r=e.getVertices(),h=c.getEdgeOrthogonals(a).concat(c.getEdgeOrthogonals(r)),u=null,d=Number.MAX_VALUE,p=-1,w=null,y=[],g=[],b=null,f=null,x=null,m=0;m<h.length;m++){if(b=h[m],y=c.projectShapeFromPoint(t,s,b),g=c.projectShapeFromPoint(e,s,b),f=new n(Math.min.apply(Math,y),Math.max.apply(Math,y)),x=new n(Math.min.apply(Math,g),Math.max.apply(Math,g)),null==(u=f.getOverlapInfo(x)))return null;u.osize<d&&(d=u.osize,p=m)}return w=h[p].getUnitVector().scalarMultiply(d),s.add(w).subtract(i).magnitude()>l||(w=w.scalarMultiply(-1)),new o(t,e,w)}static pcCollisionDetection(t,e){for(var s=t.getVertices(),i=t.centre.toVector(),l=e.centre.toVector(),a=c.getEdgeOrthogonals(s),r=l.subtract(i),h=[],u=0;u<s.length;u++)h[u]=l.subtract(s[u]).magnitude();var d=h.indexOf(Math.max.apply(Math,h));a.push(l.subtract(s[d]));var p=null,w=Number.MAX_VALUE,y=-1,g=null,b=null,f=null,x=[],m=[];for(u=0;u<a.length;u++){if(x=c.projectShapeFromPoint(t,i,a[u]),m=c.projectShapeFromPoint(e,i,a[u]),b=new n(Math.min.apply(Math,x),Math.max.apply(Math,x)),f=new n(Math.min.apply(Math,m),Math.max.apply(Math,m)),null==(p=b.getOverlapInfo(f)))return null;p.osize<w&&(w=p.osize,y=u)}return g=a[y].getUnitVector().scalarMultiply(w),i.add(g).subtract(l).magnitude()>r.magnitude()||(g=g.scalarMultiply(-1)),new o(t,e,g)}static ccCollisionDetection(t,e){var s=t.centre.toVector(),i=e.centre.toVector(),l=i.subtract(s),a=t.radius+e.radius-l.magnitude(),r=null;return a>0?(r=l.getUnitVector().scalarMultiply(a),s.add(r).subtract(i).magnitude>l.magnitude()||(r=r.scalarMultiply(-1)),new o(t,e,r)):null}static collisionDetection(t,i,l){let a=null,r=null,h=null;return l&&"shape"===l.inputType?(a=t,r=i):(a=t.shape,r=i.shape),h=a.shapeType===s&&r.shapeType===s?this.ccCollisionDetection(a,r):a.shapeType===e&&r.shapeType===e?this.ppCollisionDetection(a,r):a.shapeType===e?this.pcCollisionDetection(a,r):this.pcCollisionDetection(r,a),h?h.collider1.equals(a)?new o(t,i,h.mtv):new o(i,t,h.mtv):null}}const u=c,d=class extends u{constructor(t,s,i,l,a,r,h,n){super(i,l,h,n,e,a,r),this.halfWidth=t,this.halfHeight=s}getVertices(){var t=[],e=new r(this.halfWidth,this.rotation,"polar"),s=new r(this.halfHeight,this.rotation+Math.PI/2,"polar"),i=new r(this.centre.x,this.centre.y,"cartesian");return t[0]=i.add(e).add(s),t[1]=i.subtract(e).add(s),t[2]=i.subtract(e).subtract(s),t[3]=i.add(e).subtract(s),t}render(t){u.renderPolygon(this.getVertices(),t,this.activeColour)}equals(e){return!(!u.prototype.equals.call(this,e)||Math.abs(this.halfwidth-e.halfWidth)>t||Math.abs(this.halfHeight-e.halfHeight)>t)}},p=class extends u{constructor(t,e,i,l,a,r,h){super(e,i,r,h,s,l,a),this.radius=t}render(t){u.renderCircle(this.radius,this.centre,t,this.activeColour)}equals(e){return!(!u.prototype.equals.call(this,e)||Math.abs(this.radius-e.radius)>t)}},w=class extends u{constructor(t,s,i,l,a,r,h){super(s,i,r,h,e,l,a),this.halfDistance=t}getVertices(){var t=[],e=new r(this.halfDistance,this.rotation,l),s=new r(this.halfDistance,this.rotation+2/3*Math.PI,l),a=new r(this.halfDistance,this.rotation+4/3*Math.PI,l),h=new r(this.centre.x,this.centre.y,i);return t[0]=h.add(e),t[1]=h.add(s),t[2]=h.add(a),t}render(t){u.renderPolygon(this.getVertices(),t,this.activeColour)}equals(e){return!(!u.prototype.equals.call(this,e)||Math.abs(this.halfDistance-e.halfDistance)>t)}},y=class{constructor(){this.shape=null}addShape(t){this.shape=t}reactToCollision(t,e){console.log("implement me!")}render(t){this.shape.render(t)}},g=1,b=2,f=3,x=class extends y{constructor(t,e,s,i){super(),this.material=t,this.shape=new p(e,s,0,i,0,"yellow","red"),this.shape.setIndestructable(),this.setColours()}setColours(){let t=null,e=null;this.material===g?(t="red",e="red"):this.material===b?(t="black",e="black"):this.material===f?(t="blue",e="blue"):(t="yellow",e="yellow"),this.shape.c1=t,this.shape.activeColour=t,this.shape.c2=e}upgrade(){this.material+=1,this.setColours()}update(t){this.shape.update(t)}reactToCollision(t,e){"PowerUp"!==e.constructor.name&&(this.shape.centre=this.shape.centre.toVector().add(t.scalarMultiply(2)).toPoint(),this.shape.tvelocity=this.shape.tvelocity.reflectAcross(t))}},m=class extends y{constructor(t,e,s){super(),this.material=t,this.setShape(e,s),this.setColours()}setColours(){let t=null,e=null;this.material===g?(t="red",e="red"):this.material===b?(t="black",e="black"):this.material===f?(t="blue",e="blue"):(t="yellow",e="yellow"),this.shape.c1=t,this.shape.activeColour=t,this.shape.c2=e}setShape(t,e){"rectangle"===e.colliderType?this.shape=new d(e.halfWidth,e.halfLength,t,0,new r(0,0,i),0,"yellow","red"):"triangle"===e.colliderType?this.shape=new w(e.halfDistance,t,0,new r(0,0,i),0,"yellow","red"):this.shape=new p(e.radius,t,0,new r(0,0,i),0,"yellow","red")}reactToCollision(t,e){e instanceof x&&e.material>=this.material&&(this.shape.destroyFlag=!0)}},v=class extends y{constructor(){super()}reactToCollision(t,e){e instanceof x&&1==this.shape.destructable&&(this.shape.destroyFlag=!0)}},M=class extends y{constructor(t,e,s,i){super(),this.shape=t,this.tspeed=e,this.rspeed=s,this.pic=i}update(t){1==this.pic.leftPressed&&(this.shape.centre.x-=Math.abs(this.tspeed)*(t/1e3)),1==this.pic.rightPressed&&(this.shape.centre.x+=Math.abs(this.tspeed)*(t/1e3)),1==this.pic.upPressed&&(this.shape.centre.y-=Math.abs(this.tspeed)*(t/1e3)),1==this.pic.downPressed&&(this.shape.centre.y+=Math.abs(this.tspeed)*(t/1e3)),1==this.pic.rotateClockwise&&(this.shape.rotation+=Math.abs(this.rspeed)*(t/1e3)),1==this.pic.rotateAntiClockwise&&(this.shape.rotation-=Math.abs(this.rspeed)*(t/1e3))}render(t){this.shape.render(t)}reactToCollision(t,e){(e instanceof m||e instanceof v)&&(this.shape.centre=this.shape.centre.toVector().add(t).toPoint())}},k=400,C=class extends m{constructor(t,e){super(g,t,e)}reactToCollision(t,e){e instanceof x&&(this.shape.destroyFlag=!0,e.upgrade())}};window.onload=function(){console.log("asfasfaf");let t=document.getElementById("breakout_canvas"),e=new class{constructor(t){this.leftPressed=!1,this.rightPressed=!1,this.upPressed=!1,this.downPressed=!1,this.rotateClockwise=!1,this.rotateAntiClockwise=!1;let e=this;t.addEventListener("keydown",(function(t){e.keyDownHandler(t)})),t.addEventListener("keyup",(function(t){e.keyUpHandler(t)}))}keyDownHandler(t){37==t.keyCode&&(this.leftPressed=!0),38==t.keyCode&&(this.upPressed=!0),39==t.keyCode&&(this.rightPressed=!0),40==t.keyCode&&(this.downPressed=!0),90==t.keyCode&&(this.rotateAntiClockwise=!0),88==t.keyCode&&(this.rotateClockwise=!0)}keyUpHandler(t){37==t.keyCode&&(this.leftPressed=!1),38==t.keyCode&&(this.upPressed=!1),39==t.keyCode&&(this.rightPressed=!1),40==t.keyCode&&(this.downPressed=!1),90==t.keyCode&&(this.rotateAntiClockwise=!1),88==t.keyCode&&(this.rotateClockwise=!1)}}(document),s=new class{constructor(t){this.pic=t,this.player=null,this.ball=null,this.bricks=[],this.walls=[],this.freedomWall=null,this.deathWall=null,this.init()}update(t){this.player.update(t),this.ball.update(t);let e=this.detectAllCollisions();return this.resolveCollisions(e),this.removeDestroyedShapes(),this.checkGameOver()}detectAllCollisions(){let t=[],e=null;e=u.collisionDetection(this.ball,this.player),null!==e&&t.push(e);let s=[this.ball,this.player];for(let i of s){for(let s of this.bricks)e=u.collisionDetection(i,s),null!==e&&t.push(e);for(let s of this.walls)e=u.collisionDetection(i,s),null!==e&&t.push(e)}return t}resolveCollisions(t){for(let e of t)e.resolve()}removeDestroyedShapes(){let t=null;for(let e=this.bricks.length-1;e>=0;e--)t=this.bricks[e].shape,t.destructable&&t.destroyFlag&&this.bricks.splice(e,1);let e=null;for(let t=this.walls.length-1;t>=0;t--)e=this.walls[t].shape,e.destructable&&e.destroyFlag&&this.walls.splice(t,1)}checkGameOver(){return this.freedomWall.shape.destroyFlag?1:this.deathWall.shape.destroyFlag?2:3}displayWinScreen(t){let e=t.getContext("2d");e.clearRect(0,0,k,500),e.font="16px Arial",e.fillStyle="#0095DD",e.fillText("YOU DEFEATED",200,250)}displayLossScreen(t){let e=t.getContext("2d");e.clearRect(0,0,k,500),e.font="16px Arial",e.fillStyle="#0095DD",e.fillText("YOU DIED",200,250)}render(t){var e=t.getContext("2d");e.clearRect(0,0,t.width,t.height),this.player.render(e),this.ball.render(e);for(let t of this.bricks)t.render(e);for(let t of this.walls)t.render(e)}init(){this.player=null,this.ball=null,this.bricks=[],this.walls=[],this.freedomWall=null,this.deathWall=null,this.initWalls(),this.initBricks(),this.initBall(),this.initPlayers()}initPlayers(){var t=new d(50,5,new h(200,450),0,new r(0,0,i),0,"green","red");t.setIndestructable(),this.player=new M(t,150,2.5,this.pic)}initBall(){this.ball=new x(g,10,new h(200,400),new r(180,180,i))}level1Obstacles(){let t={colliderType:"rectangle",halfWidth:15,halfLength:8},e={colliderType:"triangle",halfDistance:15},s={colliderType:"circle",radius:13},i=[],l=null;for(let e=0;e<3;e++)for(let a=0;a<3;a++)0!=e||1!=a?(l=new m(g,new h(40*a+25,30*e+20),t),i.push(l)):(l=new C(new h(40*a+25,30*e+20),s),i.push(l));for(let t=0;t<3;t++)for(let a=0;a<3;a++)0!=t||1!=a?(l=new m(b,new h(40*a+290,30*t+20),e),i.push(l)):(l=new C(new h(40*a+290,30*t+20),s),i.push(l));for(let a=0;a<3;a++)l=new m(f,new h(160,30*a+20),e),i.push(l),l=new m(f,new h(200,30*a+20),t),i.push(l),l=new m(f,new h(240,30*a+20),s),i.push(l);return i}initBricks(){let t=this.level1Obstacles();for(let e of t)this.bricks.push(e)}initWalls(){let t=new d(5,250,new h(0,250),0,new r(0,0,i),0,"black","black"),e=new d(5,250,new h(k,250),0,new r(0,0,i),0,"black","black"),s=new d(k/6,5,new h(200,0),0,new r(0,0,i),0,"black","black"),l=new d(k/6,5,new h(k/6,0),0,new r(0,0,i),0,"black","black"),a=new d(k/6,5,new h(k*(5/6),0),0,new r(0,0,i),0,"black","black"),n=new d(200,5,new h(200,500),0,new r(0,0,i),0,"black","black"),o=new d(5,125,new h(k/3,125),0,new r(0,0,i),0,"black","black"),c=new d(5,125,new h(k*(2/3),125),0,new r(0,0,i),0,"black","black");t.setIndestructable(),e.setIndestructable(),o.setIndestructable(),c.setIndestructable(),l.setIndestructable(),a.setIndestructable();let u=new v,p=new v,w=new v,y=new v,g=new v,b=new v,f=new v,x=new v;u.shape=t,p.shape=e,w.shape=s,y.shape=l,g.shape=a,b.shape=n,f.shape=o,x.shape=c,this.walls.push(u),this.walls.push(p),this.walls.push(w),this.walls.push(y),this.walls.push(g),this.walls.push(b),this.walls.push(f),this.walls.push(x),this.freedomWall=w,this.deathWall=b}}(e),l=new class{constructor(t,e){this.intervalID=null,this.world=t,this.canvas=e}runGame(){var t=this,e=performance.now(),s=null,i=null;this.intervalID=setInterval((function(){s=performance.now()-e,e=performance.now(),1==(i=t.processFrame(s))&&(clearInterval(t.intervalID),t.world.displayWinScreen(t.canvas)),2==i&&(clearInterval(t.intervalID),t.world.displayLossScreen(t.canvas))}),1/60*1e3)}processFrame(t){var e;return e=this.world.update(t),this.world.render(this.canvas),e}stopGame(){clearInterval(this.intervalID)}resetGame(){clearInterval(this.intervalID),this.world.init(),this.world.render(this.canvas)}}(s,t),a=document.getElementById("start_game_btn"),n=document.getElementById("stop_game_btn"),o=document.getElementById("reset_game_btn");a.addEventListener("click",(function(){l.runGame()})),n.addEventListener("click",(function(){l.stopGame()})),o.addEventListener("click",(function(){l.resetGame()})),window.addEventListener("keydown",(function(t){[37,38,39,40].indexOf(t.keyCode)>-1&&t.preventDefault()}),!1)}})();